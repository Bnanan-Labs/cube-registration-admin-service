name: Laravel CI

on:
  push:
    branches:
      - development
      - main
  pull_request:

jobs:
  tests:
    name: Run Test Suites
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secretroot
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage

      - name: Verify MySQL connection
        run: |
          mysql --version
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uuser -psecret -e "SHOW DATABASES"

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_DATABASE: test_db
          DB_USERNAME: user
          DB_HOST: 127.0.0.1
          DB_PASSWORD: secret
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: phpdbg -qrr vendor/bin/phpunit --testdox -d memory_limit=512M --coverage-clover clover.xml
  phpstan:
    name: Run Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage

      - name: Execute analysis (PHPStan) via Larastan
        run: vendor/bin/phpstan analyse
