type User {
    wca_id: WcaId!
    email: String
    name: String
    avatar: String
    nationality: String
    registrations(competition_id: ID): [UserRegistration] @field(resolver: "App\\GraphQL\\Queries\\Me@registrations")
    is_delegate: Boolean!
    is_manager: Boolean!
    gender: String
}

type UserRegistration {
    competition: Competition
    competitor: Competitor
    staff: Staff
}

type AuthPayload {
    token: String!
    user: User!
}

type LogoutResponse {
    status: String!
    message: String
}

#type ForgotPasswordResponse {
#    status: String!
#    message: String
#}
#
#input ForgotPasswordInput {
#    email: Email!
#}
#
#input NewPasswordWithCodeInput {
#    email: Email!
#    token: String!
#    password: String!
#    password_confirmation: String!
#}
#
#input RegisterInput {
#    first_name: String
#    last_name: String
#    nationality: CountryEnum
#    email: Email! @rules(apply: ["required", "email"])
#    password: String! @rules(apply: ["required", "confirmed", "min:8"])
#    password_confirmation: String!
#}

extend type Query {
    me: User
}

extend type Mutation {
#    login(input: LoginInput @spread): AuthPayload! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Login@resolve")
#    refreshToken(input: RefreshTokenInput @spread): AuthPayload! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\RefreshToken@resolve")
#    logout: LogoutResponse! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Logout@resolve")
#    forgotPassword(input: ForgotPasswordInput! @spread): ForgotPasswordResponse! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\ForgotPassword@resolve")
#    updateForgottenPassword(input: NewPasswordWithCodeInput! @spread): ForgotPasswordResponse! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\ResetPassword@resolve")
#    register(input: RegisterInput @spread): AuthPayload! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Register@resolve")
    socialLogin(code: String! @rules(apply: ["required"])): AuthPayload!
}
