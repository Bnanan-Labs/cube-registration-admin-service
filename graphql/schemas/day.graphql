enum WeekDayEnum {
    MONDAY @enum(value: 1)
    TUESDAY @enum(value: 2)
    WEDNESDAY @enum(value: 3)
    THURSDAY @enum(value: 4)
    FRIDAY @enum(value: 5)
    SATURDAY @enum(value: 6)
    SUNDAY @enum(value: 0)
}

type Day {
    id: ID!
    title: String
    week_day: WeekDayEnum!
    sort_id: Int!
    date: Date!
    price: MoneyBag
    is_bookable: Boolean
}

input DaysBelongsToMany {
    sync: [ID!]
    syncWithoutDetaching: [ID!]
}

input DaysHasMany {
    connect: [ID!]
    disconnect: [ID!]
}

input UpdateDayInput {
    id: ID!
    title: String
    price: MoneyBagInput
    is_bookable: Boolean
}

input CreateDayInput {
    title: String!
    price: MoneyBagInput
    date: Date!
    is_bookable: Boolean!
}

extend type Query {
    day(id: ID! @eq): Day @find
    days(is_bookable: Boolean @eq): [Day!]! @paginate
}

extend type Mutation {
    createDay(input: CreateDayInput! @spread): Day @create @guard @can(ability: "manage")
    updateDay(input: UpdateDayInput! @spread): Day @update @guard @can(ability: "manage")
    deleteDay(id: ID!): Day @delete @guard @can(ability: "manage")
}
