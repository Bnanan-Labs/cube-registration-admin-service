input RegisterCompetitorInput {
    first_name: String!
    last_name: String!
    email: Email!
    guests: [String!]!
    is_interested_in_nations_cup: Boolean!
    events: [ID!]
    days: [ID!]
}

input CreateCompetitorInput {
    first_name: String!
    last_name: String!
    email: Email!
    wca_id: WcaId!
    nationality: String!
    gender: String!
    registration_status: RegistrationStatus
    payment_status: PaymentStatus
    guests: [String!]!
    is_interested_in_nations_cup: Boolean!
    event_ids: [ID!]
    day_ids: [ID!]
}

input UpdateCompetitorInput {
    id: ID!
    first_name: String
    last_name: String
    email: Email
    nationality: String
    gender: String
    guests: [String!]
    is_interested_in_nations_cup: Boolean
    event_ids: [ID!]
    day_ids: [ID!]
}

input UpdateRegistrationInput {
    competition_id: ID!
    first_name: String
    last_name: String
    email: Email
    nationality: String
    gender: String
    guests: [String!]
    is_interested_in_nations_cup: Boolean
    event_ids: [ID!]
    day_ids: [ID!]
}

type RegistrationReceipt {
    registration_id: ID!
    first_name: String!
    last_name: String!
    wca_id: WcaId!
    email: Email!
}

type Competitor {
    id: ID!
    first_name: String!
    last_name: String!
    wca_id: WcaId!
    email: Email! @guard @managementAccess
    avatar: String
    gender: String! @guard @managementAccess
    guests: [String!] @guard @managementAccess
    number_of_guests: Int! @rename(attribute: "numberOfGuests")
    registration_status: RegistrationStatus!
    payment_status: PaymentStatus! @guard @managementAccess
    has_podium_potential: Boolean!
    events: [Event!]! @belongsToMany
    days: [Day!]! @belongsToMany @guard @managementAccess
    nationality: String!
    is_eligible_for_prizes: Boolean!
    is_interested_in_nations_cup: Boolean!
    finances: FinancialBook! @guard @managementAccess
    created_at: DateTime!
    updated_at: DateTime
}

extend type Query {
    competitors(
        events: [ID!]
        days: [ID!]
        is_eligible_for_prizes: Boolean @eq
        registration_status: RegistrationStatus @eq
        wca_id: WcaId @eq
        competition_id: ID @eq
    ): [Competitor!]! @paginate
    competitor(id: ID! @eq): Competitor @find
}

extend type Mutation {
    registerCompetitor(input: RegisterCompetitorInput @spread): RegistrationReceipt
        @guard
    updateRegistration(input: UpdateRegistrationInput @spread): Competitor
        @update
        @guard
        @can(ability: "manage")
    createCompetitor(input: CreateCompetitorInput @spread): Competitor
        @create
        @guard
        @can(ability: "crud")
    updateCompetitor(input: UpdateCompetitorInput @spread): Competitor
        @update
        @guard
        @can(ability: "crud")
    deleteCompetitor(id: ID!): Competitor
        @delete
        @guard
        @can(ability: "crud")

    createPaymentIntent(competitor_id: ID!): Payment
        @guard
}

